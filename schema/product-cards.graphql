# Product Cards Query Schema
#
# Types and query for product listing/category pages
# Supports both Catalog Service and Live Search
# Facets are handled by separate Citisignal_productFacets query

# Shared types used by product cards
type Citisignal_ColorOption {
  name: String
  hex: String
}

type Citisignal_ProductImage {
  url: String
  altText: String
}

# Configurable option types for smart product card buttons
type Citisignal_ConfigurableOptionValue {
  label: String!
  value: String!
  swatch_data: Citisignal_SwatchData
}

type Citisignal_SwatchData {
  type: String
  value: String
}

type Citisignal_ConfigurableOption {
  label: String!
  attribute_code: String!
  values: [Citisignal_ConfigurableOptionValue]
}

# Product card type for listing pages
type Citisignal_ProductCard {
  id: String!
  sku: String!
  urlKey: String!
  name: String!
  manufacturer: String
  price: String! # Display string: "$1,199.99"
  priceValue: Float! # Raw number: 1199.99
  originalPrice: String # Display string: "$1,399.99"
  originalPriceValue: Float # Raw number: 1399.99
  discountPercent: Int
  inStock: Boolean!
  # Semantic image fields (abstracted from Adobe Commerce roles)
  image: Citisignal_ProductImage # Main product image (base role)
  thumbnail: Citisignal_ProductImage # Cart-optimized image (thumbnail role)
  gallery: [Citisignal_ProductImage] # Additional images for galleries
  memory: [String]
  colors: [Citisignal_ColorOption]
  configurable_options: [Citisignal_ConfigurableOption]
}

# Page info for pagination
type Citisignal_PageInfo {
  current_page: Int!
  page_size: Int!
  total_pages: Int!
}

# Product search result with pagination
type Citisignal_ProductCardResult {
  items: [Citisignal_ProductCard]
  totalCount: Int
  hasMoreItems: Boolean!
  currentPage: Int
  page_info: Citisignal_PageInfo
  _debug: String # Debug information when requested
}

# Filter input for product searches (includes category for standalone queries)
input Citisignal_ProductFilter {
  categoryUrlKey: String # Category URL key like "phones" or "accessories"
  # Dynamic facets as JSON object - accepts any attribute codes from Adobe
  # Example: {"cs_manufacturer": ["Apple"], "custom_field": ["value"]}
  facets: JSON
  # Legacy support - will be deprecated
  manufacturer: String
  memory: [String]
  color: [String]
  price: [String] # Price ranges like ["300.0-400.0"]
  onSaleOnly: Boolean
}

# Filter input for page-level queries (category comes from resolver parameter)
input Citisignal_PageFilter {
  # Dynamic facets as JSON object - accepts any attribute codes from Adobe
  # Example: {"cs_manufacturer": ["Apple"], "custom_field": ["value"]}
  facets: JSON
  # Legacy support - will be deprecated
  manufacturer: String
  memory: [String]
  color: [String]
  price: [String] # Price ranges like ["300.0-400.0"]
  onSaleOnly: Boolean
}

# Sort direction enum
enum Citisignal_SortDirection {
  ASC
  DESC
}

# Sort attribute enum for product listings
enum Citisignal_ProductSortAttribute {
  RELEVANCE # Default for search results
  PRICE # Sort by price
  NAME # Sort by product name
}

# Sort options
input Citisignal_SortInput {
  attribute: Citisignal_ProductSortAttribute!
  direction: Citisignal_SortDirection!
}

# Product cards query
extend type Query {
  Citisignal_productCards(
    phrase: String
    filter: Citisignal_ProductFilter
    limit: Int = 20
    page: Int = 1
    sort: Citisignal_SortInput
  ): Citisignal_ProductCardResult
}
